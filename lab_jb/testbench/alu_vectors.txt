// dummy vector to let the testbench warm up
0_0000_0_00000000_00000000_00000000

// bitwise AND (4'b0000 = 4'h0)
1_0000_0_00000000_ffffffff_00000000
1_0001_0_ffffffff_ffffffff_ffffffff
1_0002_0_aaaaaaaa_55555555_00000000
1_0003_0_aaaaaaaa_aaaaaaaa_aaaaaaaa
1_0004_0_55555555_55555555_55555555

// bitwise OR (4'b0001 = 4'h1)
1_0005_1_00000000_ffffffff_ffffffff
1_0006_1_ffffffff_ffffffff_ffffffff
1_0007_1_aaaaaaaa_55555555_ffffffff
1_0008_1_aaaaaaaa_aaaaaaaa_aaaaaaaa
1_0009_1_55555555_55555555_55555555

// bitwise XOR (4'b0010 = 4'h2)
1_000a_2_00000000_ffffffff_ffffffff
1_000b_2_ffffffff_ffffffff_00000000
1_000c_2_aaaaaaaa_55555555_ffffffff
1_000d_2_aaaaaaaa_aaaaaaaa_00000000
1_000e_2_55555555_55555555_00000000

// ADD (4'b0011 = 4'h3)
1_000f_3_00000001_00000001_00000002 //  1 +  1 =  2
1_0010_3_ffffffff_00000001_00000000 // -1 +  1 =  0
1_0011_3_ffffffff_ffffffff_fffffffe // -1 + -1 = -2

// SUB (4'b0100 = 4'h4)
1_0012_4_00000001_00000001_00000000 //  1 -  1 =  0
1_0013_4_ffffffff_00000001_fffffffe // -1 -  1 = -2
1_0014_4_ffffffff_ffffffff_00000000 // -1 - -1 =  0

// MULT low (4'b0101 = 4'h5)
1_0015_5_00000001_00000001_00000001 //  1 *  1 =  1
1_0016_5_ffffffff_00000001_ffffffff // -1 *  1 = -1
1_0017_5_ffffffff_ffffffff_00000001 // -1 * -1 =  1
1_0018_5_00000002_00000003_00000006 //  2 *  3 =  6
1_0019_5_fffffffe_fffffffd_00000006 // -2 * -3 =  6
1_001a_5_00000002_fffffffd_fffffffa //  2 * -3 =  -6

// MULT high signed (4'b0110 = 4'h6)
1_001b_6_00000001_00000001_00000000 //  1 *  1 =  1
1_001c_6_ffffffff_00000001_ffffffff // -1 *  1 = -1
1_001d_6_ffffffff_ffffffff_00000000 // -1 * -1 =  1
1_001e_6_00000002_00000003_00000000 //  2 *  3 =  6
1_001f_6_fffffffe_fffffffd_00000000 // -2 * -3 =  6
1_0020_6_00000002_fffffffd_ffffffff //  2 * -3 = -6

// MULT high unsigned (4'b0111 = 4'h7)
1_0021_7_00000001_00000001_00000000 //  1 *  1 =  1
1_0022_7_ffffffff_00000001_00000000 // -1 *  1 = 2^32-1
1_0023_7_ffffffff_ffffffff_fffffffe // -1 * -1 = (2^32-1)^2
1_0024_7_00000002_00000003_00000000 //  2 *  3 =  6

// SLL (4'b1000 = 4'h8)
1_0025_8_00000001_00000001_00000002 // 1 << 1
1_0026_8_00000001_0000001e_40000000 // 1 << 30
1_0027_8_00000001_0000001f_80000000 // 1 << 31

// SRL (4'b1001 = 4'h9)
1_0028_9_00000002_00000001_00000001 // 2 >> 1
1_0029_9_40000000_0000001e_00000001 // 0x40000000 >> 30
1_002a_9_80000000_0000001f_00000001 // 0x80000000 >> 31

// TODO: SRA seems to be acting like SRL right now??
// SRA (4'b1010 = 4'ha)
1_002b_a_40000000_00000002_10000000 // 0x400000000 >>> 2
1_002c_a_80000000_00000003_f0000000 // 0x800000000 >>> 3
1_002d_a_c0000000_00000002_f0000000 // 0xc00000000 >>> 2
1_002e_a_ffffffff_00000008_ffffffff

1_002f_b_40000000_00000002_10000000 // 0x400000000 >>> 2
1_0030_b_80000000_00000003_f0000000 // 0x800000000 >>> 3
1_0031_b_c0000000_00000002_f0000000 // 0xc00000000 >>> 2
1_0032_a_ffffffff_00000008_ffffffff

// SLT signed (4'b1100 = 4'hc)
1_0033_c_00000000_00000000_00000000 //  0 <  0 (false)
1_0034_c_00000000_00000001_00000001 //  0 <  1 (true)
1_0035_c_00000001_00000000_00000000 //  1 <  0 (false)
1_0036_c_00000001_00000001_00000000 //  1 <  1 (false)
1_0037_c_ffffffff_00000000_00000001 // -1 <  0 (true)
1_0038_c_00000000_ffffffff_00000000 //  0 < -1 (false)

// SLT unsigned (4'b1101 = 4'hd)
1_0038_d_00000000_00000000_00000000 //  0 <  0 (false)
1_0039_d_00000000_00000001_00000001 //  0 <  1 (true)
1_003a_d_00000001_00000000_00000000 //  1 <  0 (false)
1_003b_d_00000001_00000001_00000000 //  1 <  1 (false)
1_003c_d_ffffffff_00000000_00000000 // -1 <  0 (false)
1_003d_d_00000000_ffffffff_00000001 //  0 < -1 (true)

// finish
4_0000_0_00000000_00000000_00000000
